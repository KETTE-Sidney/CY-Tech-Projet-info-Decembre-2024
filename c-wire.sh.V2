#!/bin/bash

# Script Shell pour le projet C-Wire
# Usage : ./c-wire.sh <csv_file> <station_type> <consumer_type> [<plant_id>]

start_time=$(date +%s)

# Fonction pour afficher l'aide
usage() {
    echo "Usage: $0 <csv_file> <station_type> <consumer_type> [<plant_id>]"
    echo "station_type : hvb, hva, lv"
    echo "consumer_type : comp, indiv, all"
    echo "plant_id : optionnel, ID de la centrale spécifique"
    exit 1
}

# Vérification des arguments
if [[ "$#" -lt 3 || "$#" -gt 4 ]]; then
    echo "Erreur : Nombre d'arguments incorrect."
    usage
fi

csv_file="$1"
station_type="$2"
consumer_type="$3"
plant_id="${4:-ALL}"

# Vérification des options station_type et consumer_type
if [[ ! "$station_type" =~ ^(hvb|hva|lv)$ ]]; then
    echo "Erreur : station_type invalide. Options valides : hvb, hva, lv."
    usage
fi

if [[ ! "$consumer_type" =~ ^(comp|indiv|all)$ ]]; then
    echo "Erreur : consumer_type invalide. Options valides : comp, indiv, all."
    usage
fi

# Vérification des fichiers et compilation du programme C
if [[ ! -f "$csv_file" ]]; then
    echo "Erreur : Le fichier CSV spécifié n'existe pas."
    exit 1
fi

if [[ ! -f "codeC/main" ]]; then
    echo "Compilation du programme C..."
    make -C codeC
    if [[ $? -ne 0 ]]; then
        echo "Erreur : Échec de compilation."
        exit 1
    fi
fi

# Préparation des dossiers
mkdir -p tmp output
rm -f tmp/* output/*

# Filtrage des données
filtered_file="tmp/filtered_${station_type}_${consumer_type}_${plant_id}.csv"

awk -F';' -v station="$station_type" -v consumer="$consumer_type" -v plant="$plant_id" '
BEGIN { OFS=";" }
{
    if (station == "hvb" && $2 != "-" && consumer == "comp" && ($1 == plant || plant == "ALL")) {
        print $0
    } else if (station == "hva" && $3 != "-" && consumer == "comp" && ($1 == plant || plant == "ALL")) {
        print $0
    } else if (station == "lv" && $4 != "-" && consumer != "-" && ($1 == plant || plant == "ALL")) {
        print $0
    }
}' "$csv_file" > "$filtered_file"

if [[ ! -s "$filtered_file" ]]; then
    echo "Erreur : Aucun résultat trouvé pour les critères donnés."
    exit 1
fi

echo "Données filtrées sauvegardées dans $filtered_file."

# Exécution du programme C
output_file="output/result_${station_type}_${consumer_type}_${plant_id}.csv"
./codeC/main "$filtered_file" > "$output_file"

if [[ $? -ne 0 ]]; then
    echo "Erreur : Échec de l'exécution du programme C."
    exit 1
fi

echo "Résultats sauvegardés dans $output_file."

# Tri et sortie finale
sorted_file="output/sorted_${station_type}_${consumer_type}_${plant_id}.csv"
sort -t';' -k2 -n "$output_file" > "$sorted_file"

echo "Résultats triés sauvegardés dans $sorted_file."

end_time=$(date +%s)
execution_time=$((end_time - start_time))

echo "Script terminé en $execution_time secondes."

